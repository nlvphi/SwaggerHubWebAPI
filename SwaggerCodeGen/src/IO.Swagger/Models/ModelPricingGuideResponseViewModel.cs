/*
 * Appraisal Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ModelPricingGuideResponseViewModel : IEquatable<ModelPricingGuideResponseViewModel>
    { 
        /// <summary>
        /// Gets or Sets ModelPricingGuideKey
        /// </summary>

        [DataMember(Name="ModelPricingGuideKey")]
        public int? ModelPricingGuideKey { get; set; }

        /// <summary>
        /// Gets or Sets ModelPricingGuideCode
        /// </summary>

        [DataMember(Name="ModelPricingGuideCode")]
        public string ModelPricingGuideCode { get; set; }

        /// <summary>
        /// Gets or Sets DmsMakeCode
        /// </summary>

        [DataMember(Name="DmsMakeCode")]
        public int? DmsMakeCode { get; set; }

        /// <summary>
        /// Gets or Sets Family
        /// </summary>

        [DataMember(Name="Family")]
        public string Family { get; set; }

        /// <summary>
        /// Gets or Sets VehicleType
        /// </summary>

        [DataMember(Name="VehicleType")]
        public int? VehicleType { get; set; }

        /// <summary>
        /// Gets or Sets ManufactureYear
        /// </summary>

        [DataMember(Name="ManufactureYear")]
        public int? ManufactureYear { get; set; }

        /// <summary>
        /// Gets or Sets ManufactureMonth
        /// </summary>

        [DataMember(Name="ManufactureMonth")]
        public int? ManufactureMonth { get; set; }

        /// <summary>
        /// Gets or Sets Series
        /// </summary>

        [DataMember(Name="Series")]
        public string Series { get; set; }

        /// <summary>
        /// Gets or Sets BadgeDescription
        /// </summary>

        [DataMember(Name="BadgeDescription")]
        public string BadgeDescription { get; set; }

        /// <summary>
        /// Gets or Sets BadgeSecondaryDescription
        /// </summary>

        [DataMember(Name="BadgeSecondaryDescription")]
        public string BadgeSecondaryDescription { get; set; }

        /// <summary>
        /// Gets or Sets Variant
        /// </summary>

        [DataMember(Name="Variant")]
        public string Variant { get; set; }

        /// <summary>
        /// Gets or Sets BodyStyle
        /// </summary>

        [DataMember(Name="BodyStyle")]
        public string BodyStyle { get; set; }

        /// <summary>
        /// Gets or Sets DriveType
        /// </summary>

        [DataMember(Name="DriveType")]
        public string DriveType { get; set; }

        /// <summary>
        /// Gets or Sets EngineSize
        /// </summary>

        [DataMember(Name="EngineSize")]
        public string EngineSize { get; set; }

        /// <summary>
        /// Gets or Sets Engine
        /// </summary>

        [DataMember(Name="Engine")]
        public string Engine { get; set; }

        /// <summary>
        /// Gets or Sets FuelType
        /// </summary>

        [DataMember(Name="FuelType")]
        public string FuelType { get; set; }

        /// <summary>
        /// Gets or Sets NewPrice
        /// </summary>

        [DataMember(Name="NewPrice")]
        public double? NewPrice { get; set; }

        /// <summary>
        /// Gets or Sets ManufacturerModelCode
        /// </summary>

        [DataMember(Name="ManufacturerModelCode")]
        public string ManufacturerModelCode { get; set; }

        /// <summary>
        /// Gets or Sets ManufacturerModelSeries
        /// </summary>

        [DataMember(Name="ManufacturerModelSeries")]
        public string ManufacturerModelSeries { get; set; }

        /// <summary>
        /// Gets or Sets ManufacturerEngineCode
        /// </summary>

        [DataMember(Name="ManufacturerEngineCode")]
        public string ManufacturerEngineCode { get; set; }

        /// <summary>
        /// Gets or Sets ManufacturerTransmissionCode
        /// </summary>

        [DataMember(Name="ManufacturerTransmissionCode")]
        public string ManufacturerTransmissionCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ModelPricingGuideResponseViewModel {\n");
            sb.Append("  ModelPricingGuideKey: ").Append(ModelPricingGuideKey).Append("\n");
            sb.Append("  ModelPricingGuideCode: ").Append(ModelPricingGuideCode).Append("\n");
            sb.Append("  DmsMakeCode: ").Append(DmsMakeCode).Append("\n");
            sb.Append("  Family: ").Append(Family).Append("\n");
            sb.Append("  VehicleType: ").Append(VehicleType).Append("\n");
            sb.Append("  ManufactureYear: ").Append(ManufactureYear).Append("\n");
            sb.Append("  ManufactureMonth: ").Append(ManufactureMonth).Append("\n");
            sb.Append("  Series: ").Append(Series).Append("\n");
            sb.Append("  BadgeDescription: ").Append(BadgeDescription).Append("\n");
            sb.Append("  BadgeSecondaryDescription: ").Append(BadgeSecondaryDescription).Append("\n");
            sb.Append("  Variant: ").Append(Variant).Append("\n");
            sb.Append("  BodyStyle: ").Append(BodyStyle).Append("\n");
            sb.Append("  DriveType: ").Append(DriveType).Append("\n");
            sb.Append("  EngineSize: ").Append(EngineSize).Append("\n");
            sb.Append("  Engine: ").Append(Engine).Append("\n");
            sb.Append("  FuelType: ").Append(FuelType).Append("\n");
            sb.Append("  NewPrice: ").Append(NewPrice).Append("\n");
            sb.Append("  ManufacturerModelCode: ").Append(ManufacturerModelCode).Append("\n");
            sb.Append("  ManufacturerModelSeries: ").Append(ManufacturerModelSeries).Append("\n");
            sb.Append("  ManufacturerEngineCode: ").Append(ManufacturerEngineCode).Append("\n");
            sb.Append("  ManufacturerTransmissionCode: ").Append(ManufacturerTransmissionCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ModelPricingGuideResponseViewModel)obj);
        }

        /// <summary>
        /// Returns true if ModelPricingGuideResponseViewModel instances are equal
        /// </summary>
        /// <param name="other">Instance of ModelPricingGuideResponseViewModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ModelPricingGuideResponseViewModel other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    ModelPricingGuideKey == other.ModelPricingGuideKey ||
                    ModelPricingGuideKey != null &&
                    ModelPricingGuideKey.Equals(other.ModelPricingGuideKey)
                ) && 
                (
                    ModelPricingGuideCode == other.ModelPricingGuideCode ||
                    ModelPricingGuideCode != null &&
                    ModelPricingGuideCode.Equals(other.ModelPricingGuideCode)
                ) && 
                (
                    DmsMakeCode == other.DmsMakeCode ||
                    DmsMakeCode != null &&
                    DmsMakeCode.Equals(other.DmsMakeCode)
                ) && 
                (
                    Family == other.Family ||
                    Family != null &&
                    Family.Equals(other.Family)
                ) && 
                (
                    VehicleType == other.VehicleType ||
                    VehicleType != null &&
                    VehicleType.Equals(other.VehicleType)
                ) && 
                (
                    ManufactureYear == other.ManufactureYear ||
                    ManufactureYear != null &&
                    ManufactureYear.Equals(other.ManufactureYear)
                ) && 
                (
                    ManufactureMonth == other.ManufactureMonth ||
                    ManufactureMonth != null &&
                    ManufactureMonth.Equals(other.ManufactureMonth)
                ) && 
                (
                    Series == other.Series ||
                    Series != null &&
                    Series.Equals(other.Series)
                ) && 
                (
                    BadgeDescription == other.BadgeDescription ||
                    BadgeDescription != null &&
                    BadgeDescription.Equals(other.BadgeDescription)
                ) && 
                (
                    BadgeSecondaryDescription == other.BadgeSecondaryDescription ||
                    BadgeSecondaryDescription != null &&
                    BadgeSecondaryDescription.Equals(other.BadgeSecondaryDescription)
                ) && 
                (
                    Variant == other.Variant ||
                    Variant != null &&
                    Variant.Equals(other.Variant)
                ) && 
                (
                    BodyStyle == other.BodyStyle ||
                    BodyStyle != null &&
                    BodyStyle.Equals(other.BodyStyle)
                ) && 
                (
                    DriveType == other.DriveType ||
                    DriveType != null &&
                    DriveType.Equals(other.DriveType)
                ) && 
                (
                    EngineSize == other.EngineSize ||
                    EngineSize != null &&
                    EngineSize.Equals(other.EngineSize)
                ) && 
                (
                    Engine == other.Engine ||
                    Engine != null &&
                    Engine.Equals(other.Engine)
                ) && 
                (
                    FuelType == other.FuelType ||
                    FuelType != null &&
                    FuelType.Equals(other.FuelType)
                ) && 
                (
                    NewPrice == other.NewPrice ||
                    NewPrice != null &&
                    NewPrice.Equals(other.NewPrice)
                ) && 
                (
                    ManufacturerModelCode == other.ManufacturerModelCode ||
                    ManufacturerModelCode != null &&
                    ManufacturerModelCode.Equals(other.ManufacturerModelCode)
                ) && 
                (
                    ManufacturerModelSeries == other.ManufacturerModelSeries ||
                    ManufacturerModelSeries != null &&
                    ManufacturerModelSeries.Equals(other.ManufacturerModelSeries)
                ) && 
                (
                    ManufacturerEngineCode == other.ManufacturerEngineCode ||
                    ManufacturerEngineCode != null &&
                    ManufacturerEngineCode.Equals(other.ManufacturerEngineCode)
                ) && 
                (
                    ManufacturerTransmissionCode == other.ManufacturerTransmissionCode ||
                    ManufacturerTransmissionCode != null &&
                    ManufacturerTransmissionCode.Equals(other.ManufacturerTransmissionCode)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (ModelPricingGuideKey != null)
                    hashCode = hashCode * 59 + ModelPricingGuideKey.GetHashCode();
                    if (ModelPricingGuideCode != null)
                    hashCode = hashCode * 59 + ModelPricingGuideCode.GetHashCode();
                    if (DmsMakeCode != null)
                    hashCode = hashCode * 59 + DmsMakeCode.GetHashCode();
                    if (Family != null)
                    hashCode = hashCode * 59 + Family.GetHashCode();
                    if (VehicleType != null)
                    hashCode = hashCode * 59 + VehicleType.GetHashCode();
                    if (ManufactureYear != null)
                    hashCode = hashCode * 59 + ManufactureYear.GetHashCode();
                    if (ManufactureMonth != null)
                    hashCode = hashCode * 59 + ManufactureMonth.GetHashCode();
                    if (Series != null)
                    hashCode = hashCode * 59 + Series.GetHashCode();
                    if (BadgeDescription != null)
                    hashCode = hashCode * 59 + BadgeDescription.GetHashCode();
                    if (BadgeSecondaryDescription != null)
                    hashCode = hashCode * 59 + BadgeSecondaryDescription.GetHashCode();
                    if (Variant != null)
                    hashCode = hashCode * 59 + Variant.GetHashCode();
                    if (BodyStyle != null)
                    hashCode = hashCode * 59 + BodyStyle.GetHashCode();
                    if (DriveType != null)
                    hashCode = hashCode * 59 + DriveType.GetHashCode();
                    if (EngineSize != null)
                    hashCode = hashCode * 59 + EngineSize.GetHashCode();
                    if (Engine != null)
                    hashCode = hashCode * 59 + Engine.GetHashCode();
                    if (FuelType != null)
                    hashCode = hashCode * 59 + FuelType.GetHashCode();
                    if (NewPrice != null)
                    hashCode = hashCode * 59 + NewPrice.GetHashCode();
                    if (ManufacturerModelCode != null)
                    hashCode = hashCode * 59 + ManufacturerModelCode.GetHashCode();
                    if (ManufacturerModelSeries != null)
                    hashCode = hashCode * 59 + ManufacturerModelSeries.GetHashCode();
                    if (ManufacturerEngineCode != null)
                    hashCode = hashCode * 59 + ManufacturerEngineCode.GetHashCode();
                    if (ManufacturerTransmissionCode != null)
                    hashCode = hashCode * 59 + ManufacturerTransmissionCode.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ModelPricingGuideResponseViewModel left, ModelPricingGuideResponseViewModel right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ModelPricingGuideResponseViewModel left, ModelPricingGuideResponseViewModel right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
